# 🔐 Access Control in Computer Science

Access control is the practice of **WHO can access WHAT** in a computer system, network, or application.  

It’s all about **permissions** — controlling which users are allowed to access protected data such as **files, databases, APIs, and more**.

---

## 🔑 Key Concepts of Access Control
1. **Subjects** → The entities making requests (*users, groups, applications*).  
2. **Objects** → The resources being protected (*files, APIs, databases*).  
3. **Permissions** → The actions allowed (*read, write, execute, delete*).  
4. **Policies** → The rules that define who gets access to what.  

---

## ⚙️ Types of Access Control

### 1. Discretionary Access Control (DAC)
- Resource owners decide who gets access.  
- **Examples**:  
  - File permissions in Linux (`chmod`).  
  - The owner decides who can access repositories in **GitHub/GitLab**.  
  - You decide who can see your posts on **social media**.  

---

### 2. Mandatory Access Control (MAC)
- Central authority defines strict policies, often based on **security levels**.  
- **Examples**:  
  - **Document Classification**:  
    - *Top Secret* → Access limited to individuals with Top Secret clearance.  
    - *Secret* → Access limited to Secret or higher clearance.  
    - *Confidential* → Access limited to Confidential or higher clearance.  
    - 👉 A soldier with *Confidential* clearance **cannot open a Top Secret battle plan file**, even if they find it.  
  - **Financial Institution**:  
    - *Top Secret* → Encryption keys.  
    - *Secret* → Internal risk assessment reports.  
    - *Confidential* → Customer personal info.  
    - 👉 Employees can only access data **based on their job role clearance**.  

---

### 3. Role-Based Access Control (RBAC)
- Access is determined by the **role** assigned to the user.  
- Roles group together permissions, making management easier.  
- **Examples**:  
  - In a company:  
    - **Admin** → Can add/remove users, configure settings.  
    - **Manager** → Can view reports, approve requests.  
    - **Employee** → Can only access their own tasks.  
  - In a hospital:  
    - **Doctor** → Can view and update patient records.  
    - **Nurse** → Can view but not modify sensitive information.  
    - **Receptionist** → Can only schedule appointments.  

---

### 4. Attribute-Based Access Control (ABAC)
- Access is determined by **attributes** of the user, resource, and environment.  
- More flexible and dynamic than RBAC.  
- **Examples**:  
  - **E-commerce system**:  
    - A discount page is visible **only if**:  
      - User attribute: "Premium Member".  
      - Environment attribute: "Current date is within Black Friday sale".  
  - **Corporate VPN**:  
    - Allow login **only if**:  
      - User attribute: "Department = IT".  
      - Environment attribute: "Login request is from office IP".  
  - **Healthcare system**:  
    - A doctor can access a patient’s record **only if**:  
      - User attribute: "Role = Doctor".  
      - Resource attribute: "Assigned patient".  
      - Environment attribute: "Access time is during working hours".  

---
